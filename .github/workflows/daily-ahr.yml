name: Daily AHR Execution

on:
  schedule:
    - cron: '30 00 * * *'   # 每天 UTC 00:30（北京时间 08:30）
  workflow_dispatch: {}     # 支持手动触发

jobs:
  run-ahr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install pandas numpy scikit-learn requests jq

      - name: Test Multiple APIs
        id: api-test
        run: |
          # 定义要测试的API列表
          APIs=(
            "KuCoin|https://api.kucoin.com/api/v1/market/candles?type=1day&symbol=BNB-USDT&startAt=1609459200&endAt=1661990400"
            "Bybit|https://api.bybit.com/v5/market/kline?category=spot&symbol=BNBUSDT&interval=D&limit=10"
            "CoinGecko|https://api.coingecko.com/api/v3/ping"
            "Binance|https://api.binance.com/api/v3/klines?symbol=BNBUSDT&interval=1d&limit=10"
          )

          # 测试每个API
          for API in "${APIs[@]}"; do
            IFS='|' read -r NAME URL <<< "$API"
            echo "Testing $NAME API..."
            
            RESPONSE_CODE=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            echo "$NAME API Response Code: $RESPONSE_CODE"
            
            if [ "$RESPONSE_CODE" -eq 200 ]; then
              echo "✅ $NAME API 可用"
              echo "SELECTED_API=$NAME" >> $GITHUB_ENV
              echo "SELECTED_API_URL=${URL//\&/\\&}" >> $GITHUB_ENV
              break
            else
              echo "❌ $NAME API 不可用"
              # 显示错误详情（如果是JSON响应）
              curl -s "$URL" | jq . 2>/dev/null || true
            fi
          done

          if [ -z "$SELECTED_API" ]; then
            echo "所有API测试失败！"
            exit 1
          fi

      - name: Run AHR Script with Selected API
        run: |
          echo "使用 $SELECTED_API 执行脚本..."
          cd app/dashboard/python
          python ahr.py --api $SELECTED_API

      - name: Commit updated JSON files
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add *.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Auto-update JSON data via ${{ env.SELECTED_API }} [skip ci]"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}